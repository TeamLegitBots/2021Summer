import com.qualcomm.robotcore.eventloop.opmode.LinearOpMode;
import com.qualcomm.robotcore.hardware.DcMotor;
import com.qualcomm.robotcore.robot.Robot;
import com.qualcomm.robotcore.util.Hardware;
import com.qualcomm.robotcore.eventloop.opmode.TeleOp;
import com.qualcomm.robotcore.hardware.Servo;
import com.qualcomm.robotcore.hardware.CRServo;
import com.qualcomm.robotcore.hardware.HardwareMap;



@TeleOp(name = "TeleopOneP")
//@Disabled
public class Teleop extends LinearOpMode {

    org.firstinspires.ftc.teamcode.hardwaremap robot = new org.firstinspires.ftc.teamcode.hardwaremap();

    double sensitivity = 1;


    @Override
    public void runOpMode() throws InterruptedException {


        robot.init(hardwareMap);

        robot.FrontRight.setMode(DcMotor.RunMode.RUN_WITHOUT_ENCODER);
        robot.FrontLeft.setMode(DcMotor.RunMode.RUN_WITHOUT_ENCODER);
        robot.BackLeft.setMode(DcMotor.RunMode.RUN_WITHOUT_ENCODER);
        robot.BackRight.setMode(DcMotor.RunMode.RUN_WITHOUT_ENCODER);
        waitForStart();
        
        while (opModeIsActive()) {
            telemetry.addData("LF Power: " , robot.FrontLeft.getPower() );
            telemetry.addData("LB Power: " , robot.BackLeft.getPower() );
            telemetry.addData("RF Power: " , robot.FrontRight.getPower() );
            telemetry.addData("RB Power: " , robot.BackRight.getPower() );
            /*
            robot.FrontRight.setPower(sensitivity * FR);
            robot.FrontLeft.setPower(sensitivity * FL );
            robot.BackRight.setPower(sensitivity * BR);
            robot.BackLeft.setPower(sensitivity * BL);
            */
            setDriveMotorPower();


        }

    }

    public void setDriveMotorPower(){
        float turn = gamepad1.right_stick_x;
        float strafe = -gamepad1.left_stick_x;
        float drive = gamepad1.left_stick_y;

        float FR = +strafe + drive - turn;
        float FL = -strafe + drive  + turn;
        float BR = -strafe - drive - turn;
        float BL = -strafe  +drive - turn;

        robot.FrontRight.setPower(sensitivity * FR);
        robot.FrontLeft.setPower(sensitivity * FL );
        robot.BackRight.setPower(sensitivity * BR);
        robot.BackLeft.setPower(sensitivity * BL);
    }

}

